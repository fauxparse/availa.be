section.edit-event {

  .content {

  }

  .dates,
  .times {
    @include align-items(stretch);
    @include display(flex);
    @include flex-direction(row);
    @include justify-content(flex-start);

    .field {
      @include flex(1);
    }

    .conjunction {
      line-height: 2rem;
      vertical-align: middle;
      padding: 0.5rem 1rem;
      min-width: 3rem;
      text-align: center;
    }
  }

  .weekdays {
    padding: 0.5rem 0;
    max-width: 20rem;

    @include display(flex);
    @include flex-direction(row);
    @include justify-content(space-between);

    .weekday {
      cursor: pointer;

      input {
        display: none;

        + span {
          display: block;
          width: 2em;
          height: 2em;
          line-height: 2em;
          vertical-align: middle;
          text-align: center;
          border-radius: 50%;
          position: relative;
          @include tappable-region;
          @include user-select(none);
          @include transition-property(background-color color);
          @include transition-duration($animation-duration/2);
          @include transition-timing-function($animation-timing-function);
        }

        &:checked + span {
          background: $base-accent-color;
          color: white;
        }

        &:disabled + span {
          background: transparent;
          color: disabled-color();
        }
      }

      &:first-child { margin-left: -0.5rem; }
      &:last-child { margin-right: -0.5rem; }
    }
  }

  .roles {
    margin-bottom: 1rem;

    .role:first-child:last-child {
      padding-right: 0;
      > button { display: none; }
    }
  }

  [rel="add-role"] {
    margin-left: 0;
  }

  @include media($medium-screen) {
    form {
      > fieldset:nth-child(1) {
        @include span-columns(8);
      }

      > fieldset:nth-child(2) {
        @include span-columns(4);
      }
    }
  }
}

.role {
  list-style: none;
  margin: 0 -1rem;
  padding: 0.5rem 5rem 0.5rem 1rem;
  position: relative;
  background: $base-background-color;

  .text {
    line-height: 2rem;
    vertical-align: middle;
    padding: 0 1rem;

    &:first-child { padding-left: 0; }
    &:last-child { padding-right: 0; }
  }

  .field {
    @include align-items(stretch);
    @include display(flex);
    @include flex-direction(row);
    @include justify-content(flex-start);
    padding: 0;
  }

  input[type="text"],
  .dropdown {
    @include flex(1);
  }

  button {
    text-transform: none;
    padding: 0;
    min-width: 0;
    margin: 0;
    background: none;
  }

  > button {
    height: 1.5rem;
    position: absolute;
    top: 0.75rem;
    right: 1rem;

    &[rel="delete"] {
      right: 3rem;
    }

    i {
      font-size: 1.5rem;
      color: secondary-color();
    }
  }
}

.new-skill {
  .field input {
    width: 100%;

    &:not([invalid]) ~ .error-message {
      visibility: hidden;
    }
  }
}

.role-limits {
  padding: 0;

  form {
    padding: 0.5rem 1rem 1.5rem;

    .limits {
      line-height: 2rem;
      vertical-align: middle;
      margin-bottom: 0.5rem;
    }
  }
}

section .show-event {
  > header {
    height: auto;

    .title {
      padding-top: 6rem;

      h1, h2 {
        @include ellipsis;
        display: block;
      }

      h1 {
        @include type-title(white);
      }

      h2 {
        @include type-subhead(white);
        color: secondary-color(white);
      }
    }
  }

  .instances {
    .primary-action {
      cursor: pointer;
    }
  }
}

.event-instance {
  position: absolute;
  left: 0;
  right: 0;
  opacity: 0;

  .container {
    @include position(absolute, 0rem 0rem 0rem 0rem);
    background: $base-background-color;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    cursor: default;

    > section {
      display: none;

      &.active {
        display: block;
      }
    }
  }

  $header-size: 7rem;

  .container > header {
    position: relative;
    background-color: rgba($base-background-color, 0.95);
    z-index: 10;
    padding: 1rem 1rem 0rem $keyline;
    border-bottom: 1px solid divider-color();
    height: $header-size;
    @include transition(box-shadow 0.25s ease, border-color 0.25s ease);

    &.floating {
      border-bottom-color: transparent;
      @include shadow(1);
    }

    button {
      font-size: 1.5rem;
      width: 1em;
      height: 1em;
      color: secondary-color();
      background: transparent;
      padding: 0;
      min-width: 0;

      &[rel="back"] {
        @include position(absolute, 1rem null null 1rem);
      }
    }

    h1, h2 {
      @include ellipsis;
      display: block;
    }

    h1 {
      @include type-title;
    }

    h2 {
      @include type-subhead;
      color: secondary-color();
    }

    .tabs {
      margin-left: -$keyline;
      margin-right: -1rem;
      a {
        text-align: center;
      }
    }
  }

  h3 {
    @include type-body-2;
    color: secondary-color();
    padding: 1rem;
    text-transform: capitalize;

    small {
      font-size: 100%;
      color: disabled-color();
      font-weight: $base-font-weight;
      text-transform: none;
    }

    + .list {
      padding-top: 0;
    }
  }

  section.invalid h3 small {
    color: $red;
  }

  @include media($medium-screen) {
    .list {
      @include clearfix;
      @include user-select(none);

      li:empty {
        height: 0;
        width: 50%;
      }
    }

    .list-item {
      float: left;
      width: 50%;
    }
  }

  @include media($large-screen) {
    .list li:empty,
    .list-item {
      width: (100%/3);
    }
  }

  .member {
    height: 0;
    overflow: hidden;
    opacity: 0;
    position: relative;
    padding-right: $keyline;
    @include user-select(none);
    @include transition-property(height opacity);
    @include transition-duration($animation-duration);
    @include transition-timing-function($animation-timing-function);

    .slider {
      position: relative;
      z-index: 1;
      width: 100%;
      @include transform(translateX(0));
      @include transition-property(transform);
      @include transition-duration($animation-duration);
      @include transition-timing-function($animation-timing-function);
    }

    .menu {
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      padding: 0.5rem;
      min-width: 100%;
      background: $grey;
      opacity: 0;
      box-shadow: inset 0 1px 3px rgba(0,0,0,0.12), inset 0 1px 2px rgba(0,0,0,0.24);
      @include transition(opacity 0s linear $animation-duration);

      button {
        font-size: 1rem;
        line-height: 2rem;
        height: 2rem;
        margin-right: 0.5rem;
        padding: 0 0.75rem;
        min-width: 3rem;
        color: secondary-color(white);

        &.active {
          background: divider-color();
          color: text-color(white);
        }
      }
    }

    .text {
      @include transition(opacity $animation-duration $animation-timing-function);

      .line {
        margin: 0;
        font-size: 1rem;
        font-weight: $base-font-weight;
        color: text-color();
      }
    }

    .primary-action {
      padding: 1rem 0;
      margin-right: -$keyline;
      background: $base-background-color;
    }

    .avatar {
      cursor: pointer;
      @include tappable-region;
      @include transition-property(transform);
      @include transition-duration($animation-duration);
      @include transition-timing-function($animation-timing-function);
    }

    &.hidden {
      display: none !important;
    }

    &.open {
      .menu {
        opacity: 1;
        @include transition(none);
      }

      .slider {
        @include transform(translateX(100%));
      }

      .avatar {
        @include transform(rotate(360deg));
      }

      .text {
        opacity: 0;
      }
    }
  }

  .assignments section[role-id]:not(.empty) .empty,
  .assignments section[role-id].empty .toggle {
    display: none;
  }

  .assignments .member.assigned,
  .assignments .toggle,
  .assignments .show-all .member.available,
  .availability .member.available,
  .availability.show-all .member,
  .assignments section.empty .empty {
    height: 3rem;
    opacity: 1;
  }

  .assignments .member:not(.assigned),
  .availability .member:not(.available) {
    .avatar {
      opacity: $secondary-alpha;
      border-width: 0.125rem;
      border-style: solid;
      background: white !important;

      .letter {
        color: inherit;
        margin: -0.125rem;
      }
    }

    .text .line {
      color: secondary-color();
    }
  }

  .availability .member.unavailable {
    .avatar {
      opacity: $disabled-alpha;

      .letter {
        display: none;
      }

      i {
        color: inherit;
        display: block;
        margin: -0.125rem;
      }
    }

    .text .line {
      color: disabled-color();
    }
  }

  .assignments {
    li.empty,
    li.toggle {
      float: none;
      width: 100%;

      .icon {
        left: 1.5rem;
      }

      .icon, .line {
        color: disabled-color();
        @include transition-property(transform);
        @include transition-duration($animation-duration);
        @include transition-timing-function($animation-timing-function);
      }
    }

    section:not(.show-all) .toggle .toggle-closed,
    section.show-all .toggle .toggle-open {
      display: none;
    }

    .show-all {
      .toggle {
        .icon {
          @include transform(rotate(45deg));
        }
      }
    }
  }

  .availability {
    header {
      border-bottom: 1px solid divider-color();
      padding: 0;
      @include align-items(stretch);
      @include display(flex);
      @include flex-direction(row);
      @include justify-content(flex-start);

      .field {
        @include flex(1);
        padding: 0;
        margin-bottom: -1px;
        margin-right: 1rem;

        i {
          position: absolute;
          left: 1rem;
          top: 50%;
          margin: -0.5em 0;
          font-size: 1.5rem;
          pointer-events: none;
          color: secondary-color();
          @include transition(color 0.5s ease);
        }
      }

      [type="search"] {
        margin: 0;
        padding: 0.5rem 0.5rem 0.5rem 4rem;
        height: 3rem;

        &:not(:focus) {
          border-bottom-color: transparent;
        }

        &:focus ~ i {
          color: text-color();
        }
      }

      .dropdown {
        height: 3rem;
        border: none;
        padding-right: 1rem;

        .dropdown-toggle {
          height: 3rem;
          line-height: 3rem;
        }
      }
    }

    li.empty {
      float: none;
      width: 100%;

      .icon {
        left: 1.5rem;
      }

      .icon, .line {
        color: disabled-color();
      }

      &.hidden {
        display: none !important;
      }
    }
  }
}

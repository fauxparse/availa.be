section.edit-event {

  .content {

  }

  .dates,
  .times {
    @include align-items(stretch);
    @include display(flex);
    @include flex-direction(row);
    @include justify-content(flex-start);

    .field {
      @include flex(1);
    }

    .conjunction {
      line-height: 2rem;
      vertical-align: middle;
      padding: 0.5rem 1rem;
      min-width: 3rem;
      text-align: center;
    }
  }

  .weekdays {
    padding: 0.5rem 0;
    max-width: 20rem;

    @include display(flex);
    @include flex-direction(row);
    @include justify-content(space-between);

    .weekday {
      cursor: pointer;

      input {
        display: none;

        + span {
          display: block;
          width: 2em;
          height: 2em;
          line-height: 2em;
          vertical-align: middle;
          text-align: center;
          border-radius: 50%;
          position: relative;
          @include tappable-region;
          @include user-select(none);
          @include transition-property(background-color color);
          @include transition-duration($animation-duration/2);
          @include transition-timing-function($animation-timing-function);
        }

        &:checked + span {
          background: $base-accent-color;
          color: white;
        }

        &:disabled + span {
          background: transparent;
          color: disabled-color();
        }
      }

      &:first-child { margin-left: -0.5rem; }
      &:last-child { margin-right: -0.5rem; }
    }
  }

  .roles {
    margin-bottom: 1rem;

    .role:first-child:last-child {
      padding-right: 0;
      > button { display: none; }
    }
  }

  [rel="add-role"] {
    margin-left: 0;
  }

  @include media($medium-screen) {
    form {
      > fieldset:nth-child(1) {
        @include span-columns(8);
      }

      > fieldset:nth-child(2) {
        @include span-columns(4);
      }
    }
  }
}

.role {
  list-style: none;
  margin: 0 -1rem;
  padding: 0.5rem 5rem 0.5rem 1rem;
  position: relative;
  background: $base-background-color;

  .text {
    line-height: 2rem;
    vertical-align: middle;
    padding: 0 1rem;

    &:first-child { padding-left: 0; }
    &:last-child { padding-right: 0; }
  }

  .field {
    @include align-items(stretch);
    @include display(flex);
    @include flex-direction(row);
    @include justify-content(flex-start);
    padding: 0;
  }

  input[type="text"],
  .dropdown {
    @include flex(1);
  }

  button {
    text-transform: none;
    padding: 0;
    min-width: 0;
    margin: 0;
    background: none;
  }

  > button {
    height: 1.5rem;
    position: absolute;
    top: 0.75rem;
    right: 1rem;

    &[rel="delete"] {
      right: 3rem;
    }

    i {
      font-size: 1.5rem;
      color: secondary-color();
    }
  }
}

.new-skill {
  .field input {
    width: 100%;

    &:not([invalid]) ~ .error-message {
      visibility: hidden;
    }
  }
}

.role-limits {
  padding: 0;

  form {
    padding: 0.5rem 1rem 1.5rem;

    .limits {
      line-height: 2rem;
      vertical-align: middle;
      margin-bottom: 0.5rem;
    }
  }
}

section .show-event {
  > header {
    height: auto;

    .title {
      padding-top: 6rem;

      h1, h2 {
        @include ellipsis;
        display: block;
      }

      h1 {
        @include type-title(white);
      }

      h2 {
        @include type-subhead(white);
        color: secondary-color(white);
      }
    }
  }

  .instances {
    .primary-action {
      cursor: pointer;
    }
  }
}

.event-instance {
  position: absolute;
  left: 0;
  right: 0;
  opacity: 0;

  .container {
    @include position(absolute, 0rem 0rem 0rem 0rem);
    background: $base-background-color;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    cursor: default;

    > section {
      display: none;

      &.active {
        display: block;
      }
    }
  }

  $header-size: 7rem;

  .container > header {
    position: relative;
    background-color: $base-background-color;
    z-index: 1;
    padding: 1rem 1rem 0rem $keyline;
    border-bottom: 1px solid divider-color();
    height: $header-size;
    @include transition(box-shadow 0.25s ease, border-color 0.25s ease);

    &.floating {
      border-bottom-color: transparent;
      @include shadow(1);
    }

    button {
      font-size: 1.5rem;
      width: 1em;
      height: 1em;
      color: secondary-color();
      background: transparent;
      padding: 0;
      min-width: 0;

      &[rel="back"] {
        @include position(absolute, 1rem null null 1rem);
      }
    }

    h1, h2 {
      @include ellipsis;
      display: block;
    }

    h1 {
      @include type-title;
    }

    h2 {
      @include type-subhead;
      color: secondary-color();
    }

    .tabs {
      margin-left: -$keyline;
      margin-right: -1rem;
      a {
        text-align: center;
      }
    }
  }

  .list-item {
    .text .line {
      font-size: 1rem;
      font-weight: $base-font-weight;
      color: $black;
    }

    .avatar {
      cursor: pointer;
      @include tappable-region;

      i {
        display: none;
      }
    }

    .avatar {
      @include transition(background-color 0.5s ease);
    }

    .avatar .letter {
      @include transition(color 0.5s ease);
    }
  }

  .assignments .list-item:not(.assigned),
  .availability .list-item:not(.available) {
    opacity: $secondary-alpha;

    .avatar {
      border-width: 0.125rem;
      border-style: solid;
      background: white !important;

      .letter {
        color: inherit;
        margin: -0.125rem;
      }
    }
  }

  .assignments {
    section {
      padding: 0 0 1rem;

      &:not(:first-child) {
        border-top: 1px solid divider-color();
      }

      h3 {
        @include type-body-2;
        color: secondary-color();
        padding: 1rem;
        text-transform: capitalize;

        small {
          font-size: 100%;
          color: disabled-color();
          font-weight: $base-font-weight;
        }
      }

      .list-item {
        width: 100%;
        overflow: hidden;
        height: 0;
        @include transition(height $animation-duration $animation-timing-function);
        @include transition-delay($animation-duration);

        .primary-action {
          @include transition-property(transform opacity);
          @include transition-duration($animation-duration);
          @include transition-timing-function($animation-timing-function);
          @include transform(rotateX(90deg));
          @include perspective(10);
          opacity: 0;
        }
      }

      .list-item.assigned,
      .list-item.toggle,
      &.show-all.empty .list-item.empty,
      &.show-all .list-item.available,
      &.show-all .list-item.assigned {
        height: 3rem;
        @include transition(height $animation-duration $animation-timing-function);

        .primary-action {
          opacity: 1;
          @include transform(rotateX(0deg));
          @include transition-delay($animation-duration/2);
        }
      }

      .toggle,
      .empty {
        opacity: 1;

        .icon {
          left: 1.5rem;
        }

        .line {
          font-size: 0.875rem;
        }
      }

      .toggle {
        .icon {
          @include transition(transform $animation-duration $animation-timing-function);
          color: secondary-color();
        }

        .line {
          color: secondary-color();
        }
      }

      &.show-all .toggle-open,
      &:not(.show-all) .toggle-closed {
        display: none;
      }

      .empty {
        .icon, .line {
          color: disabled-color();
        }
      }

      &.show-all {
        .list-item.available,
        .list-item.assigned {
          height: 3rem;
        }

        .toggle {
          .icon {
            @include transform(rotate(225deg));
          }
        }
      }
    }
  }

  .availability {
    header {
      border-bottom: 1px solid divider-color();
      padding: 0;
      @include align-items(stretch);
      @include display(flex);
      @include flex-direction(row);
      @include justify-content(flex-start);

      .field {
        @include flex(1);
        padding: 0;
        margin-bottom: -1px;
        margin-right: 1rem;

        i {
          position: absolute;
          left: 1rem;
          top: 50%;
          margin: -0.5em 0;
          font-size: 1.5rem;
          pointer-events: none;
          color: secondary-color();
          @include transition(color 0.5s ease);
        }
      }

      [type="search"] {
        margin: 0;
        padding: 0.5rem 0.5rem 0.5rem 4rem;
        height: 3rem;

        &:not(:focus) {
          border-bottom-color: transparent;
        }

        &:focus ~ i {
          color: text-color();
        }
      }

      .dropdown {
        height: 3rem;
        border: none;
        padding-right: 1rem;

        .dropdown-toggle {
          height: 3rem;
          line-height: 3rem;
        }
      }
    }

    .list {
      @include display(flex);
      @include flex-direction(row);
      @include flex-wrap(wrap);
      @include user-select(none);

      li:empty {
        @include flex(1);
        min-width: 12rem;
        height: 0;
      }
    }

    .list-item {
      @include flex(1);
      min-width: 12rem;
      display: none;

      &.available {
        opacity: 1;

        &:not(.hidden) {
          display: block;
        }

        .text .line {
          color: text-color();
        }

        .avatar {
          .letter {
            color: secondary-color(white) !important;
          }
        }
      }

      &.unavailable {
        opacity: $disabled-alpha;

        .avatar {
          .letter {
            display: none;
          }

          i {
            color: inherit;
            display: block;
            margin: -0.125rem;
          }
        }
      }
    }

    &.show-all {
      .list-item:not(.hidden) {
        display: block;
      }
    }
  }
}

.radial-menu {
  position: absolute;
}

.radial-menu-item {
  position: absolute;
  border-radius: 50%;
  background: text-color();
  color: text-color(white);
  padding-top: 50%;
  @include user-select(none);
  @include transform(scale(0.1));
  opacity: 0;
  pointer-events: none;
  @include shadow(2);

  span {
    @include ellipsis;
    @include position(absolute, 50% 0rem null 0rem);
    margin: -0.5em 0;
    text-align: center;
  }

  i {
    @include position(absolute, 50% null null 50%);
    font-size: 2rem;
    margin: -0.5em;
  }

  &.over {
    background: $base-accent-color;
  }
}
